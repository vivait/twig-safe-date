name: Static Analysis

on: [ pull_request ]

env:
    PHP_VERSION: 8.2

jobs:
    psalm:
        name: Psalm
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ env.PHP_VERSION }}
                    tools: composer

            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-

            -   name: Add HTTP basic auth credentials
                run: echo '${{ secrets.COMPOSER_AUTH }}' > $GITHUB_WORKSPACE/auth.json

            -   name: Install dependencies
                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer install --prefer-dist --no-progress --no-suggest

            -   name: Run Psalm
                run: ./vendor/bin/psalm --show-info=true --output-format=github --config=psalm.xml --threads=2

    phpcs:
        name: PHP CodeSniffer
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ env.PHP_VERSION }}
                    tools: composer, cs2pr

            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-

            -   name: Add HTTP basic auth credentials
                run: echo '${{ secrets.COMPOSER_AUTH }}' > $GITHUB_WORKSPACE/auth.json

            -   name: Install dependencies
                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer install --prefer-dist --no-progress --no-suggest

            -   name: Run PHPCS
                run: ./vendor/bin/phpcs --report=checkstyle -q ./vendor/bin/phpcs --exclude=Generic.Files.LineLength,PSR1.Files.SideEffects --standard=PSR12 --colors ./src ./tests | cs2pr
